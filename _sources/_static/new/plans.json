[
	{
		"plan_metadata": {
			"description": "This is a plan",
			"instruction": "To use this plan, follow these steps...",
			"usage": "This plan is used when..."
		},
		"code_template": {
			"changeable_areas": {
				"file_path": [
                    "data.csv"
				]
			},
			"lines": [
				"import pandas as pd",
				"",
				"df = pd.read_csv($$file_path$$)"
			]
		},
		"goal": "Load data from a CSV file",
		"group": "1",
		"order": "1",
		"plan_name": "Load Data"
	},
	{
		"plan_metadata": {
			"description": "This is a plan",
			"instruction": "To use this plan, follow these steps...",
			"usage": "This plan is used when..."
		},
		"code_template": {
			"changeable_areas": {
				"'column_to_change'": [
				"'A'",
				"'B'",
				"'C'"
				],
				"'value_to_fill'": [
					"df['A'].mean()",
					"df['B'].median()",
					"0"
				]
	
			},
			"lines": [
				"# Handling missing data with fillna",
				"df_filled = df.fillna({$$'column_to_change': 'value_to_fill'$$})"
			]
		},
		"goal": "Check for missing or non-numerical values",
		"group": "1",
		"order": "2",
		"plan_name": "Check NaN"
	},
	{
		"plan_metadata": {
			"description": "This is a plan",
			"instruction": "To use this plan, follow these steps...",
			"usage": "This plan is used when..."
		},
		"code_template": {
			"changeable_areas": {
				"condition": [
					"(df['A'] > 2) & (df['B'] < 50)",
					"(df['date_column'] >= start_date) & (df['date_column'] <= end_date)",
					"df['A'] > 25"
				]
			},
			"lines": [
				"# Keep elements that satisfy the given condition",
                "filtered_df = df[$$condition$$]",
				""
			]
		},
		"goal": "Filter potentially problematic values",
		"group": "1",
		"order": "2",
		"plan_name": "Filter Values"
	},
	{
		"plan_metadata": {
			"description": "This is a plan",
			"instruction": "To use this plan, follow these steps...",
			"usage": "This plan is used when..."
		},
		"code_template": {
			"changeable_areas": {
				"bincount": [
					"10", "15", "20"
				],
				"'column_name'": [
					"'height'", "'weight'", "'age'"
				]
			},
			"lines": [
				"import matplotlib.pyplot as plt",
				"",
				"# Plotting histogram",
				"df[$$'column_name'$$].plot(kind='hist', bins=$$bincount$$, edgecolor='black')",
				"",
				"# Display the plot",
				"plt.xlabel('Values')",
				"plt.ylabel('Frequency')",
				"plt.title('Histogram of column_name')",
				"plt.grid(True)",
				"plt.show()"
			]
		},
		"goal": "Visualize the normality of a column's data distribution",
		"group": "1",
		"order": "3",
		"plan_name": "Visualize Distribution"
	}
]
